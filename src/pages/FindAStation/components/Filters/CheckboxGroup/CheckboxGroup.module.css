.checkboxGroup {
  display: flex;
  gap: calc(var(--checkbox-label-gap) * 2.5)
}

.checkboxTitle {
  font-weight: bold;
}

/* This is the label that wraps around the input & text */
.customCheckbox {
  position: relative;
  display: inline-flex;
  align-items: center; /* Vertically centers the checkbox and label - they are flex items/children */
  padding-left: calc(var(--checkbox-size) + var(--checkbox-label-gap)); /* Adds padding to the left of the element, making space for the custom checkbox */
  line-height: var(--checkbox-size); /* Text height to match checkbox height */
  font-size: 15px;
  cursor: pointer;
}

/* Hides the actual input */
.customCheckbox input {
  position: absolute;
  width: 0;
  height: 0;
  opacity: 0;
}

/* This is the checkbox */
.customCheckbox .checkbox {
  position: absolute;
  top: 50%;
  left: 0;
  width: var(--checkbox-size);
  height: var(--checkbox-size);
  border: 1.5px var(--color-light-grey) solid;
  border-radius: var(--b-radius-checkbox);
  background-color: var(--color-light);
  transform: translateY(
    -50%
  ); /* Offsets the element vertically by 50% of its own height, effectively centering it vertically */
}

/* This is the tick in the checkbox */
.customCheckbox .checkbox:after {
  content: "";
  position: absolute;
  top: calc(var(--checkbox-size) / 8);
  left: calc(var(--checkbox-size) / 4);
  display: none;
  width: calc(var(--checkbox-size) / 2.75);
  height: calc(var(--checkbox-size) / 1.75);
  border: var(--color-purple) solid;
  border-width: 0 3px 3px 0;
  transform: rotate(45deg);
}

.customCheckbox input:checked + .checkbox:after {
  /* Tick displays when input checked */
  display: block;
}
